# setwd('qingchaowan/modeling_project/Anova test/')
setwd('DataData/')
# setwd('qingchaowan/modeling_project/Anova test/')
getwd()
setwd('DATADATA1/')
fileNames <- list.files()
require(readr)
# df <- read_csv('bjCH.csv')
require(dplyr)
require(stringr)
final_df <- c()
for (fileName in fileNames) {
fileName_without_ext <- fileName %>% str_split('\\.') %>% .[[1]] %>% .[1]
filmname <- str_replace_all(fileName_without_ext, '[[:upper:]]', '')
subtitle <- str_replace_all(fileName_without_ext, '[[:lower:]]', '')
df <- read.delim(fileName) %>% as.data.frame() %>%
select(RECORDING_SESSION_LABEL, IA_DWELL_TIME, IA_FIXATION_COUNT, `IA_DWELL_TIME_.`, `IA_FIXATION_.`) %>%
mutate(film=filmname, subType=subtitle)
final_df <- rbind(final_df, df)
}
final_df %>% dims()
final_df %>% dim()
ID <- sapply(final_df[, 1], function(x) str_replace_all(x, '\\d+', ''))
index <- c()
for (i in 1:(length(ID)-3)) {
if (all(ID[i]==ID[i+1], ID[i+1]==ID[i+2], ID[i+2]==ID[i+3])) {
index <- append(index, i)
}
}
index
final_df[, 1]
index
for (i in index) {
index <- append(index, i+1)
}
index
final_df[, 24:30]
final_df[24:30,]
final_df[214:220, ]
final_df <- final_df[!(rownames(final_df) %in% index), 2:7]
final_df
models <- lapply(names(final_df)[1:4], function(x) {
# tmp = substitute(i ~  film + subType, list(i = as.name(x)))
aov(eval(substitute(i ~  film + subType, list(i = as.name(x)))), data = final_df)
})
models
model_summary <- sapply(models, summary)
sink('../model_summary.txt')
names(model_summary) <- names(final_df)[1:4]
model_summary
ffinal_df
final_df
final_df %>% head()
final_df
models <- lapply(names(final_df)[1:4], function(x) {
aov(eval(substitute(i ~  film + subType, list(i = as.name(x)))), data = final_df)
})
model_summary <- sapply(models, summary)
names(model_summary) <- names(final_df)[1:4]
sink('../model_summary.txt')
final_df
final_df
final_df
model_summary
names(model_summary) <- names(final_df)[1:4]
model_summary
names(model_summary)
final_df
names(final_df)[1:4]
tmp = substitute(i ~  film + subType, list(i = as.name('IA_DWELL_TIME')))
tmp
IA_DWELL_TIME.aov2 <- aov(eval(tmp), data=final_df)
summary(IA_DWELL_TIME.aov2)
summary_statistics <- final_df[, 1:6] %>% group_by(film, subType) %>%
summarise_all(
funs('mean'=mean, 'std'=sd)
)
# Please install this package for the first time using it
# install.packages('readr')
require(readr)
# df <- read_csv('bjCH.csv')
require(dplyr)
require(stringr)
summary_statistics <- final_df[, 1:6] %>% group_by(film, subType) %>%
summarise_all(
funs('mean'=mean, 'std'=sd)
)
summary_statistics
final_df <- c()
for (fileName in fileNames) {
fileName_without_ext <- fileName %>% str_split('\\.') %>% .[[1]] %>% .[1]
filmname <- str_replace_all(fileName_without_ext, '[[:upper:]]', '')
subtitle <- str_replace_all(fileName_without_ext, '[[:lower:]]', '')
df <- read.delim(fileName) %>% as.data.frame() %>%
select(RECORDING_SESSION_LABEL, IA_DWELL_TIME, IA_FIXATION_COUNT, `IA_DWELL_TIME_.`, `IA_FIXATION_.`, IA_LABEL) %>%
mutate(film=filmname, subType=subtitle)
final_df <- rbind(final_df, df)
}
final_df
final_df <- c()
for (fileName in fileNames) {
fileName_without_ext <- fileName %>% str_split('\\.') %>% .[[1]] %>% .[1]
filmname <- str_replace_all(fileName_without_ext, '[[:upper:]]', '')
subtitle <- str_replace_all(fileName_without_ext, '[[:lower:]]', '')
df <- read.delim(fileName) %>% as.data.frame() %>%
select(RECORDING_SESSION_LABEL, IA_DWELL_TIME, IA_FIXATION_COUNT, `IA_DWELL_TIME_.`, `IA_FIXATION_.`, IA_LABEL) %>%
filter(IA_LABEL == 1)
mutate(film=filmname, subType=subtitle)
final_df <- rbind(final_df, df)
}
final_df <- c()
for (fileName in fileNames) {
fileName_without_ext <- fileName %>% str_split('\\.') %>% .[[1]] %>% .[1]
filmname <- str_replace_all(fileName_without_ext, '[[:upper:]]', '')
subtitle <- str_replace_all(fileName_without_ext, '[[:lower:]]', '')
df <- read.delim(fileName) %>% as.data.frame() %>%
select(RECORDING_SESSION_LABEL, IA_DWELL_TIME, IA_FIXATION_COUNT, `IA_DWELL_TIME_.`, `IA_FIXATION_.`, IA_LABEL) %>%
filter(IA_LABEL == 1) %>%
mutate(film=filmname, subType=subtitle)
final_df <- rbind(final_df, df)
}
ID <- sapply(final_df[, 1], function(x) str_replace_all(x, '\\d+', ''))
index <- c()
for (i in 1:(length(ID)-3)) {
if (all(ID[i]==ID[i+1], ID[i+1]==ID[i+2], ID[i+2]==ID[i+3])) {
index <- append(index, i)
}
}
for (i in index) {
index <- append(index, i+1)
}
final_df <- final_df[!(rownames(final_df) %in% index), 2:7]
models <- lapply(names(final_df)[1:4], function(x) {
aov(eval(substitute(i ~  film + subType, list(i = as.name(x)))), data = final_df)
})
model_summary <- sapply(models, summary)
names(model_summary) <- names(final_df)[1:4]
final_df <- c()
for (fileName in fileNames) {
fileName_without_ext <- fileName %>% str_split('\\.') %>% .[[1]] %>% .[1]
filmname <- str_replace_all(fileName_without_ext, '[[:upper:]]', '')
subtitle <- str_replace_all(fileName_without_ext, '[[:lower:]]', '')
df <- read.delim(fileName) %>% as.data.frame() %>%
select(RECORDING_SESSION_LABEL, IA_DWELL_TIME, IA_FIXATION_COUNT, `IA_DWELL_TIME_.`, `IA_FIXATION_.`, IA_LABEL) %>%
filter(IA_LABEL == 1) %>%
mutate(film=filmname, subType=subtitle)
final_df <- rbind(final_df, df)
}
ID <- sapply(final_df[, 1], function(x) str_replace_all(x, '\\d+', ''))
index <- c()
for (i in 1:(length(ID)-3)) {
if (all(ID[i]==ID[i+1], ID[i+1]==ID[i+2], ID[i+2]==ID[i+3])) {
index <- append(index, i)
}
}
for (i in index) {
index <- append(index, i+1)
}
final_df <- final_df[!(rownames(final_df) %in% index), 2:7]
final_df
select(final_data, -c(IA_LABEL))
select(final_df, -c(IA_LABEL))
final_df <- c()
for (fileName in fileNames) {
fileName_without_ext <- fileName %>% str_split('\\.') %>% .[[1]] %>% .[1]
filmname <- str_replace_all(fileName_without_ext, '[[:upper:]]', '')
subtitle <- str_replace_all(fileName_without_ext, '[[:lower:]]', '')
df <- read.delim(fileName) %>% as.data.frame() %>%
select(RECORDING_SESSION_LABEL, IA_DWELL_TIME, IA_FIXATION_COUNT, `IA_DWELL_TIME_.`, `IA_FIXATION_.`, IA_LABEL) %>%
filter(IA_LABEL == 1) %>%
select(-c(IA_LABEL)) %>%
mutate(film=filmname, subType=subtitle)
final_df <- rbind(final_df, df)
}
ID <- sapply(final_df[, 1], function(x) str_replace_all(x, '\\d+', ''))
index <- c()
for (i in 1:(length(ID)-3)) {
if (all(ID[i]==ID[i+1], ID[i+1]==ID[i+2], ID[i+2]==ID[i+3])) {
index <- append(index, i)
}
}
for (i in index) {
index <- append(index, i+1)
}
final_df <- final_df[!(rownames(final_df) %in% index), 2:7]
models <- lapply(names(final_df)[1:4], function(x) {
aov(eval(substitute(i ~  film + subType, list(i = as.name(x)))), data = final_df)
})
model_summary <- sapply(models, summary)
names(model_summary) <- names(final_df)[1:4]
sink('../model_summary.txt')
models
final_df
model_summary
final_df
mdel_summary
model_summary
write_csv(summary_statistics, '../descriptive_stats.csv')
# Please install this package for the first time using it
# install.packages('readr')
require(readr)
# df <- read_csv('bjCH.csv')
require(dplyr)
summary_statistics <- final_df[, 1:6] %>% group_by(film, subType) %>%
summarise_all(
funs('mean'=mean, 'std'=sd)
)
write_csv(summary_statistics, '../descriptive_stats.csv')
final_df[, 1:6]
summary_statistics
final_df
# setwd('qingchaowan/modeling_project/Anova test/')
getwd()
setwd('DATADATA1/')
# The following system command should be run in linux OS
# system("rename 's/.xls$/.txt/' *.xls")
fileNames <- list.files()
# Please install this package for the first time using it
# install.packages('readr')
require(readr)
# df <- read_csv('bjCH.csv')
require(dplyr)
require(stringr)
final_df <- c()
for (fileName in fileNames) {
fileName_without_ext <- fileName %>% str_split('\\.') %>% .[[1]] %>% .[1]
filmName <- str_replace_all(fileName_without_ext, '[[:upper:]]', '')
subtitle <- str_replace_all(fileName_without_ext, '[[:lower:]]', '')
df <- read.delim(fileName) %>% as.data.frame() %>%
select(RECORDING_SESSION_LABEL, IA_DWELL_TIME, IA_FIXATION_COUNT, `IA_DWELL_TIME_.`, `IA_FIXATION_.`, IA_LABEL) %>%
filter(IA_LABEL == 1) %>%
select(-c(IA_LABEL)) %>%
mutate(film=filmname, subType=subtitle)
final_df <- rbind(final_df, df)
}
ID <- sapply(final_df[, 1], function(x) str_replace_all(x, '\\d+', ''))
index <- c()
for (i in 1:(length(ID)-3)) {
if (all(ID[i]==ID[i+1], ID[i+1]==ID[i+2], ID[i+2]==ID[i+3])) {
index <- append(index, i)
}
}
for (i in index) {
index <- append(index, i+1)
}
final_df <- final_df[!(rownames(final_df) %in% index), 2:7]
models <- lapply(names(final_df)[1:4], function(x) {
aov(eval(substitute(i ~  film + subType, list(i = as.name(x)))), data = final_df)
})
model_summary <- sapply(models, summary)
names(model_summary) <- names(final_df)[1:4]
sink('../model_summary.txt')
summary_statistics <- final_df[, 1:6] %>% group_by(film, subType) %>%
summarise_all(
funs('mean'=mean, 'std'=sd)
)
write_csv(summary_statistics, '../descriptive_stats.csv')
